name: CI pipeline

on:
  push:
    branches: [ master, "release/*", "ci/*" ]
  pull_request:
    branches: [ master ]
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
    inputs:
      package:
        type: string
        description: "package being released (subdir of pkgs/)"
      wheel:
        type: string
        description: "wheel being released"
      version:
        type: string
        description: "version to release"
    outputs:
      hashes:
        description: "Hashes of the artifacts that were built"
        value: ${{ jobs.build.outputs.hashes }}
  workflow_dispatch: {}
permissions:
  actions: read
  contents: read
env:
  MAIN_PYTHON_VERSION: "3.10"
  PDFTOPPM_PATH: /usr/bin/pdftoppm
  IM_COMPARE_PATH: /usr/bin/compare
  SOFTHSM2_CONF: /tmp/softhsm2.conf
  SOFTHSM2_MODULE_PATH: /usr/lib/softhsm/libsofthsm2.so
  CERTOMANCER_CONFIG_PATH: pkgs/pyhanko/tests/data/crypto/certomancer.yml

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.artifact-hashes.outputs.hashes }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }} 
      - name: Install build tools
        run: pip install --upgrade setuptools pip wheel uv tomlkit requests
      - name: Apply package version for release
        if: inputs.package != ''
        run: |
          python dev/apply_version.py ${{ inputs.package }} ${{ inputs.version }}
          git diff
      - name: Build release artifacts
        run: uv build --all-packages
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pyhanko-dist
          path: dist/
      - name: Record release artifact hashes
        if: inputs.package != ''
        id: artifact-hashes
        run: cd dist && echo "hashes=$(sha256sum $PATTERN | base64 -w0)" >> "$GITHUB_OUTPUT"
        env:
          PATTERN: ${{ inputs.wheel }}-${{ inputs.version }}*
      - name: Upload dist artifacts for release
        if: inputs.package != ''
        uses: actions/upload-artifact@v4
        with:
          name: pyhanko-release-dist
          path: dist/${{ inputs.wheel }}-${{ inputs.version }}*
  pytest-coverage:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: ./.github/actions/test-job-setup
      - uses: ./.github/actions/uv-test-deps
        with:
          dependency-group: testing-base
          package: pyhanko-certvalidator
      - name: Test pyhanko-certvalidator with pytest
        run: uv run --directory pkgs/pyhanko-certvalidator pytest --cov=./ --cov-report=xml:python-${{ matrix.python-version }}-coverage.xml
      - uses: ./.github/actions/uv-test-deps
        with:
          dependency-group: testing
          package: pyhanko
      - name: Install external tools for pyHanko test suite
        run: |
          sudo apt-get update
          sudo apt-get install poppler-utils imagemagick softhsm2
      - name: Initialise SoftHSM tokens
        run: |
          mkdir softhsm_tokens
          echo "directories.tokendir = $(pwd)/softhsm_tokens" > $SOFTHSM2_CONF
          ./pkgs/pyhanko/tests/data/crypto/testing-ca-setup/pkcs11-setup-certomancer.sh
      - name: Test pyHanko with pytest
        run: uv run --directory pkgs/pyhanko pytest --cov=./ --cov-report=xml:python-${{ matrix.python-version }}-coverage.xml
        env:
          PKCS11_TEST_MODULE: ${{ env.SOFTHSM2_MODULE_PATH }}
      - name: Stash coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ strategy.job-index }}
          path: "pkgs/*/*-coverage.xml"
  live-integration-tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: ./.github/actions/test-job-setup
      - uses: ./.github/actions/uv-test-deps
        with:
          dependency-group: live-test
          package: pyhanko
      - name: Start Certomancer Animator daemon
        run: |
          uv run certomancer --service-url-prefix http://localhost:9000 \
            --config "$CERTOMANCER_CONFIG_PATH" animate &
      - name: Start CSC dummy server
        run: |
          uv run certomancer-csc "$CERTOMANCER_CONFIG_PATH" 8999 2 &
      - name: Test with pytest
        run: |
          uv run --directory pkgs/pyhanko \
                pytest --cov=./ --cov-report=xml:python-${{ matrix.python-version }}-live-coverage.xml \
                tests/with_live_certomancer.py \
                tests/with_live_csc_dummy.py
        env:
          LIVE_CERTOMANCER_HOST_URL: http://localhost:9000
          LIVE_CSC_SCAL2_HOST_URL: http://localhost:8999
      - name: Stash coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-live-${{ strategy.job-index }}
          path: "pkgs/pyhanko/*-coverage.xml"
  smoke-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - uses: ./.github/actions/test-job-setup
      - uses: ./.github/actions/uv-test-deps
        with:
          dependency-group: testing-base
          package: pyhanko
      - name: Run smoke tests that should pass without optional dependencies
        # We run a couple of the "bread and butter" test modules, and the full CLI test suite except for
        # the PKCS#11 parts
        run: |
          uv run --directory pkgs/pyhanko pytest \
            tests/test_signing.py tests/test_diff_analysis.py tests/test_crypt.py \
            tests/test_cms.py tests/cli_tests
  codecov-upload:
    permissions:
      actions: write
      contents: read
    runs-on: ubuntu-latest
    needs: [pytest-coverage,live-integration-tests]
    steps:
      # checkout necessary to ensure the uploaded report contains the correct paths
      - uses: actions/checkout@v4
      - name: Retrieve coverage reports
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: ./reports/
      - name: Upload all coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
      - name: Clean up coverage reports
        continue-on-error: true
        uses: GeekyEggo/delete-artifact@v5
        with:
          name: coverage-*
